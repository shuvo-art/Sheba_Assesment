name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install backend dependencies
        run: npm ci

      - name: Build backend
        run: npm run build
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Run backend tests
        run: npm test || echo "No tests defined"
        env:
          NODE_ENV: test
          MONGO_URI: ${{ secrets.TEST_MONGO_URI }}
          JWT_SECRET: test-secret
          OPENAI_API_KEY: test-key
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Upgrade pip and install Python dependencies
        run: |
          cd maxim
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      # Removed Python test step since pytest is not in requirements.txt
      # - name: Run Python tests
      #   run: |
      #     cd maxim
      #     pytest || echo "No Python tests defined"

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container  # Use docker-container driver to support cache export

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mexilef-advision-ai:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            FIREBASE_SERVICE_ACCOUNT=${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Deploy to GoDaddy VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            # Accept host key to avoid verification failure
            mkdir -p /root/.ssh
            touch /root/.ssh/known_hosts
            ssh-keyscan -H 72.167.224.36 >> /root/.ssh/known_hosts 2>/dev/null
            # Ensure Docker service is running
            sudo systemctl start docker
            sudo systemctl enable docker
            # Verify Docker is installed and accessible
            if ! command -v docker &> /dev/null; then
              echo "Docker is not installed. Installing Docker..."
              sudo dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
              sudo dnf install -y docker-ce docker-ce-cli containerd.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker root
            fi
            # Pull the latest image
            docker pull ${{ secrets.DOCKER_USERNAME }}/mexilef-advision-ai:latest
            # Stop and remove the existing container (if it exists)
            docker stop mexilef-advision-ai-backend || true
            docker rm mexilef-advision-ai-backend || true
            # Run the new container
            docker run -d \
              --name mexilef-advision-ai-backend \
              -p 5006:5006 \
              -v /root/uploads:/app/uploads \
              -v /root/maxim:/app/maxim \
              -e NODE_ENV=production \
              -e PORT=5006 \
              -e MONGO_URI="${{ secrets.MONGO_URI }}" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e REFRESH_TOKEN_SECRET="${{ secrets.REFRESH_TOKEN_SECRET }}" \
              -e CLOUDINARY_CLOUD_NAME="${{ secrets.CLOUDINARY_CLOUD_NAME }}" \
              -e CLOUDINARY_API_KEY="${{ secrets.CLOUDINARY_API_KEY }}" \
              -e CLOUDINARY_API_SECRET="${{ secrets.CLOUDINARY_API_SECRET }}" \
              -e STRIPE_SECRET_KEY="${{ secrets.STRIPE_SECRET_KEY }}" \
              -e STRIPE_WEBHOOK_SECRET="${{ secrets.STRIPE_WEBHOOK_SECRET }}" \
              -e EMAIL_USER="${{ secrets.EMAIL_USER }}" \
              -e EMAIL_PASS="${{ secrets.EMAIL_PASS }}" \
              -e ADMIN_EMAIL="${{ secrets.ADMIN_EMAIL }}" \
              -e BASE_URL="${{ secrets.BASE_URL }}" \
              -e ALLOWED_ORIGINS="${{ secrets.ALLOWED_ORIGINS }}" \
              -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
              -e VISION_API_KEY="${{ secrets.VISION_API_KEY }}" \
              -e FIREBASE_SERVICE_ACCOUNT='${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' \
              --restart unless-stopped \
              ${{ secrets.DOCKER_USERNAME }}/mexilef-advision-ai:latest
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}